#!/bin/bash
set -euo pipefail

START_CRON=0
while [ $# -gt 0 ]; do
    case "$1" in
        --with-cron)
            START_CRON=1
            ;;
    esac
    shift
done

echo "Building..."
docker build \
    -f deploy/main-db/Dockerfile \
    -t babblegraph.com/main-db:$(git rev-parse --short HEAD) \
    ./deploy/main-db

echo "Removing old container..."
docker stop babblegraph_main_db && docker rm babblegraph_main_db && true

echo "Running new container..."
docker run -d -v $(pwd)/deploy/main-db/data:/var/lib/postgresql/data \
    -v $(pwd)/deploy/main-db/scripts:/home/postgres/scripts \
    -v $(pwd)/deploy/main-db/migrations:/home/postgres/migrations \
    --env-file ./env/main-db.env \
    --restart unless-stopped \
    --name babblegraph_main_db \
    -p 5432:5432 \
    babblegraph.com/main-db:$(git rev-parse --short HEAD)

echo "Setting environment"
export $(grep -v '^#' ./env/main-db.env | xargs)

echo "Creating user..."
docker exec -it babblegraph_main_db psql -c "CREATE ROLE $PG_USER WITH LOGIN SUPERUSER PASSWORD '$PG_PASSWORD';"

echo "Creating database..."
docker exec -it babblegraph_main_db psql -c "CREATE DATABASE $PG_DATABASE OWNER $PG_USER;"

echo "Unsetting environment"
unset $(grep -v '^#' ./env/main-db.env | sed -E 's/(.*)=.*/\1/' | xargs)
